pipeline {
  agent any

  tools {
    nodejs "node"
  }

  environment {
    PUPPET_MASTER_URL  = '34.133.245.13'
		PUPPET_AGENT_URL_DEV = "34.125.137.216"
		PUPPET_AGENT_URL_PROD = "34.121.72.93"
  }
  parameters {
    string(name: 'container_name', defaultValue: 'sa_page', description: 'Nombre del contenedor de docker.')
    string(name: 'image_name', defaultValue: 'img_page', description: 'Nombre de la imagene docker.')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la p√°gina.')
    string(name: 'container_port', defaultValue: '80', description: 'Puerto que usa el contenedor')
  }

  stages {
    stage('install') {
      steps {
        git branch: 'jenkins', url: 'https://github.com/201700670/SA_Practicas.git'
        dir('frontend') {
          sh 'npm install'
        }
      }
    }

    stage('test') {
      steps {
        dir('frontend') {
          sh 'npm run test --code-coverage'
        }
      }
    }

    stage('Sonarquebe experiment') {
      steps {
        dir('frontend') {
          sh 'npm run sonar'
        }
      }
    }

    stage('build') {
      steps {
        dir('frontend') {
          script {
            try {
              sh 'docker stop ${container_name}'
              sh 'docker rm ${container_name}'
              sh 'docker rmi ${image_name}:${tag_image}'
            } catch (Exception e) {
              echo 'Exception occurred: ' + e.toString()
            }
          }
          sh 'npm run build'
          sh 'docker build -t ${image_name}:${tag_image} .'
        }
      }
    }

    stage('deploy') {
      steps {
        sh 'docker run -d -p ${container_port}:80 --name ${container_name} ${image_name}:${tag_image}'
      }
    }
    stage("DeployDesarrollo") {
			steps {
				echo "Deploying to development..."
				sh '''
				    cp manifest.pp /etc/puppetlabs/code/environment/development/manifests/
            ssh -n -f sapareja2@${PUPPET_AGENT_URL_DEV} 'sudo /opt/puppetlabs/bin/puppet agent --environment-development --test'
					'''
			}
		}
    stage("DeployProduccion") {
			steps {
				echo 'Deploying to production...'
				sh '''
				    cp manifestproduc.pp /etc/puppetlabs/code/environment/production/manifests/
            ssh -n -f sapareja2@${PUPPET_AGENT_URL_PROD} 'sudo /opt/puppetlabs/bin/puppet agent --environment-production --test'
          '''
			}
		}
  }

}
